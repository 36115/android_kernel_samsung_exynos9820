name: Build & Release
run-name: ${{ github.event.inputs.action }}

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action Name'
        required: true
        default: 'Build & Release v'
      tag:
        description: 'Release Tag'
        required: true
        default: 'v'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        device: [beyond0lte, beyond1lte, beyond2lte, beyondx, d1, d1x, d2s, d2x]

    steps:
      - name: Checkout Tree
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Build Environment
        run: |
          sudo apt update -y
          sudo apt-get update --fix-missing && sudo apt-get install bc bison build-essential zstd clang flex gnupg gperf ccache liblz4-tool libsdl1.2-dev libstdc++6 libxml2 libxml2-utils lzop pngcrush schedtool xsltproc zlib1g-dev libncurses5-dev bzip2 gcc g++ libssl-dev openssl -y && sudo apt-get install gcc-aarch64-linux-gnu -y && sudo apt-get install lld llvm python-is-python3 device-tree-compiler cpio -y
          wget http://security.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2ubuntu0.1_amd64.deb && sudo dpkg -i libtinfo5_6.3-2ubuntu0.1_amd64.deb
          
      - name: Set Environment Variable
        run: |
          echo "BUILD_DATE=$(date +"%d-%m-%Y_%H-%M-%S")" >> $GITHUB_ENV
          echo "BUILD_KERNEL_VERSION=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHA=$calculatedSha" >> $GITHUB_ENV
          
      - name: Building Kernel
        run: |
            bash build.sh -m ${{ matrix.device }} -k y

      - name: Upload Kernel
        uses: actions/upload-artifact@v4
        with:
          name: "oItsMineZKernel-${{ env.BUILD_KERNEL_VERSION }}-${{ matrix.device }}-KSU-NEXT+SuSFS-${{ env.BUILD_DATE }}"
          path: |
            build/export/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Release Build Kernel
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.tag }}
          name: "${{ github.event.inputs.tag }}"
          draft: false
          prerelease: false
          makeLatest: true
          skipIfReleaseExists: true
          token: ${{ secrets.TOKEN }}          
          artifacts: "artifacts/**/*.zip"
          body: "Commit SHA: ${{ github.sha }}"
